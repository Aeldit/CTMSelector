plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version + "+" + project.minecraft_version

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.terraformersmc.com/releases" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modLocalRuntime "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Fabric API
    modImplementation(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-key-binding-api-v1", project.fabric_version))

    // ModMenu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modLocalRuntime "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Continuity
    modLocalRuntime "maven.modrinth:continuity:3.0.0-beta.4+1.20.2"

    // Dynamic FPS
    modLocalRuntime "maven.modrinth:dynamic-fps:MJxmQ042"

    // zip4j
    implementation "net.lingala.zip4j:zip4j:2.11.5"
    include "net.lingala.zip4j:zip4j:2.11.5"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

jar {
    from("LICENSE.txt")
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")

    projectId = "ctm-selector"
    versionName = "[$project.minecraft_version] CTM Selector $project.mod_version"
    versionNumber = "$version"
    versionType = "beta"

    uploadFile = remapJar

    gameVersions = ["1.20.2"]
    loaders = ["fabric"]

    dependencies {
        required.project "fabric-api"
        required.project "continuity"
        required.version "modmenu", project.modmenu_version
    }

    changelog = file("changelogs/latest.md").exists() ? file("changelogs/latest.md").getText() : "No changelog provided"

    syncBodyFrom = rootProject.file("README.md").text

    debugMode = false
}
tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
